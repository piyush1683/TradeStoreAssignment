@startuml
!theme plain
title Trade Store - Component Architecture

' External Systems
cloud "External Clients" as clients
cloud "Kafka Cluster" as kafka
cloud "AWS DynamoDB" as dynamodb
cloud "PostgreSQL" as postgres

package "Trade Ingestion Service" {
    [REST Controller] as restController
    [Kafka Producer] as kafkaProducer
    [Query Service] as queryService
}

package "Trade Capture Service" {
    [Kafka Consumer] as kafkaConsumer
    [Trade Processor] as tradeProcessor
    [DynamoDB Client] as dynamoClient
}

package "Trade Validation Service" {
    [Validation Engine] as validationEngine
    [Projection Service] as projectionService
    [Expiry Scheduler] as expiryScheduler
}

package "Trade Common Module" {
    [Trade Model] as tradeModel
    [Validation Annotations] as validationAnnotations
    [Common Validation] as commonValidation
}

clients --> restController
restController --> kafkaProducer
kafkaProducer --> kafka

kafka --> kafkaConsumer
kafkaConsumer --> tradeProcessor
tradeProcessor --> dynamoClient
dynamoClient --> dynamodb

tradeProcessor --> validationEngine
validationEngine --> projectionService
projectionService --> postgres

queryService --> postgres
expiryScheduler --> postgres

validationEngine --> commonValidation
tradeProcessor --> tradeModel
restController --> tradeModel

note right of restController : Port 8081
note right of tradeProcessor : Port 8082
note right of validationEngine : Port 8083

@enduml
