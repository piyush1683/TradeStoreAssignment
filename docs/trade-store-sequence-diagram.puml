@startuml
!theme plain
title Trade Store - Processing Sequence

participant "Client" as client
participant "Trade Ingestion Service" as ingestion
participant "Kafka Cluster" as kafka
participant "Trade Capture Service" as capture
participant "DynamoDB" as dynamodb
participant "Trade Validation Service" as validation
participant "PostgreSQL" as postgres
participant "Trade Common" as common

== Trade Processing Flow ==

client -> ingestion : POST /api/trades
note right : Trade data with validation rules

ingestion -> ingestion : Validate Trade Data
ingestion -> ingestion : Generate Request ID
ingestion -> kafka : Publish Trade Event
note right : topic: trade_ingestion

kafka -> capture : Consume Trade Event
note right : @KafkaListener

capture -> capture : Convert to TradeModel
capture -> dynamodb : Store Trade Event
note right : PutItemRequest

dynamodb --> capture : Event Stored

capture -> validation : updateTradeProjectStore
note right : REST call

validation -> common : validateTrade
note right : Unified validation

common -> common : Check Version Rules
common -> common : Check Maturity Date
common -> common : Check Expiry Status

common --> validation : Validation Result

alt Trade is Valid
    validation -> postgres : Insert Trade Projection
    postgres --> validation : Projection Stored
    validation --> capture : Success Response
else Trade is Invalid
    validation -> postgres : Insert Trade Exception
    postgres --> validation : Exception Stored
    validation --> capture : Validation Failed
end

capture --> client : Processing Complete

== Query Flow ==

client -> ingestion : GET /api/trades/exceptions
ingestion -> validation : Query Exceptions
validation -> postgres : SELECT from trade_exception
postgres --> validation : Exception Records
validation --> ingestion : Exception Data
ingestion --> client : HTTP Response

== Expiry Processing ==

loop Every 5 minutes
    validation -> validation : @Scheduled Expiry Check
    validation -> postgres : Query Expired Trades
    postgres --> validation : Expired Trade List
    
    loop For each expired trade
        validation -> common : checkAndMarkTradeAsExpired
        common -> common : Validate Expiry Date
        common --> validation : Expiry Confirmed
        validation -> postgres : UPDATE expired = Y
        postgres --> validation : Trade Marked as Expired
    end
end

@enduml
